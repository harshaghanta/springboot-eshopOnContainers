replicaCount: 1
pathBase: /ordering-api

image:
  repository: harshaghanta/orderingapi
  pullPolicy: Always  
  tag: "latest"

fluentbit:
  enabled: false
  indexName: ordering-api-logs
  logPath: /app/logs
  image:
    repository: fluent/fluent-bit
    tag: 1.8.3
    pullPolicy: IfNotPresent
  elasticsearch:
    host: "elasticsearch-master.logging.svc.cluster.local"
    port: 9200
    user: "elastic"
    password: "elastic"

allowedOrigins: ""

ingress:
  enabled: true
  tls: false

sql:
  common:
    user: "sa"
    pwd: "P@ssw0rd"
  datasource:
    url: "jdbc:sqlserver://sql-data:1433;databaseName=OrderDB;integratedSecurity=false;encrypt=false;trustServerCertificate=true;"


eventbus:
  svc: rabbitmq
  user: "guest"
  pwd: "guest"
  retryCount: "5"


service:
  type: ClusterIP
  port: 8086
  name: ordering-api

issuer:
  internalIssuerUrl: "http://keycloak:8085/realms/eshoponcontainers"

env:
  configmap:
  - name: "eventbus.host"
    key: eventbus__host
  - name: "eventbus.username"
    key: eventbus__username
  - name: "eventbus.password"
    key: eventbus__password
  - name: "eventbus.retryCount"
    key: eventbus__retryCount  
  - name: "orderapi.datasource.url"
    key: ordering__dataSourceUrl
  - name: "orderapi.datasource.username"
    key: ordering__dataSourceUsername
  - name: "orderapi.datasource.password"
    key: ordering__dataSourcePassword
  - name: "issuer.url"
    key: issuer__url
  - name: "webspa.allowedCorsOrigin"
    key: allowed__origins

  values:
    - name: SERVER_SERVLET_CONTEXT_PATH
      value: "/ordering-api"

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

probes:
  liveness:
    path: /liveness
    initialDelaySeconds: 10
    periodSeconds: 15
    port: 80
  readiness:
    path: /hc
    timeoutSeconds: 5
    initialDelaySeconds: 90
    periodSeconds: 60
    port: 80